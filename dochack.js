/* Generated by the Nim Compiler v2.1.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI671088654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI872415309 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI872415315 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555824 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555167 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555174 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555172 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555172.node = NNI33555172;
NTI33555174.base = NTI33555171;
NTI33555175.base = NTI33555171;
var NNI33555171 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555174, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555175, name: "up", sons: null}]};
NTI33555171.node = NNI33555171;
var NNI33555167 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555167.node = NNI33555167;
NTI33555171.base = NTI33555167;
NTI33555172.base = NTI33555171;
NTI134217741.base = NTI33555172;
NTI134217743.base = NTI134217741;
var NNI33555824 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555824.node = NNI33555824;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555172;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555172;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555172;
var NNI872415315 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI872415309, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI872415315.node = NNI872415315;
var NNI671088654 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554466, name: "Field1", sons: null}]};
NTI671088654.node = NNI671088654;

function mnewString(len_33556990) {
        var result = new Array(len_33556990);
    for (var i = 0; i < len_33556990; i++) {result[i] = 0;}
    return result;
  

  
}

function arrayConstr(len_33557301, value_33557302, typ_33557303) {
        var result = new Array(len_33557301);
    for (var i = 0; i < len_33557301; ++i) result[i] = nimCopy(null, value_33557302, typ_33557303);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557255, src_33557256, ti_33557257) {
  var result_33557266 = null;

    switch (ti_33557257.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557246(ti_33557257))) {
      result_33557266 = src_33557256;
      }
      else {
        result_33557266 = [src_33557256[0], src_33557256[1]];
      }
      
      break;
    case 19:
            if (dest_33557255 === null || dest_33557255 === undefined) {
        dest_33557255 = {};
      }
      else {
        for (var key in dest_33557255) { delete dest_33557255[key]; }
      }
      for (var key in src_33557256) { dest_33557255[key] = src_33557256[key]; }
      result_33557266 = dest_33557255;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557257.base == null))) {
      result_33557266 = nimCopy(dest_33557255, src_33557256, ti_33557257.base);
      }
      else {
      if ((ti_33557257.kind == 17)) {
      result_33557266 = (dest_33557255 === null || dest_33557255 === undefined) ? {m_type: ti_33557257} : dest_33557255;
      }
      else {
        result_33557266 = (dest_33557255 === null || dest_33557255 === undefined) ? {} : dest_33557255;
      }
      }
      nimCopyAux(result_33557266, src_33557256, ti_33557257.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557256)) { 
        if(dest_33557255 === null || dest_33557255 === undefined || dest_33557255.length != src_33557256.length) {
          dest_33557255 = new src_33557256.constructor(src_33557256);
        } else {
          dest_33557255.set(src_33557256, 0);
        }
        result_33557266 = dest_33557255;
      } else {
        if (src_33557256 === null) {
          result_33557266 = null;
        }
        else {
          if (dest_33557255 === null || dest_33557255 === undefined || dest_33557255.length != src_33557256.length) {
            dest_33557255 = new Array(src_33557256.length);
          }
          result_33557266 = dest_33557255;
          for (var i = 0; i < src_33557256.length; ++i) {
            result_33557266[i] = nimCopy(result_33557266[i], src_33557256[i], ti_33557257.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557256 === null) {
        result_33557266 = null;
      }
      else {
        if (dest_33557255 === null || dest_33557255 === undefined || dest_33557255.length != src_33557256.length) {
          dest_33557255 = new Array(src_33557256.length);
        }
        result_33557266 = dest_33557255;
        for (var i = 0; i < src_33557256.length; ++i) {
          result_33557266[i] = nimCopy(result_33557266[i], src_33557256[i], ti_33557257.base);
        }
      }
    
      break;
    case 28:
            if (src_33557256 !== null) {
        result_33557266 = src_33557256.slice(0);
      }
    
      break;
    default: 
      result_33557266 = src_33557256;
      break;
    }

  return result_33557266;

}

function cstrToNimstr(c_33556888) {
      var ln = c_33556888.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556888.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556888.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556891) {
  var result_33556892 = null;

    var res_33556933 = newSeq_33556909((s_33556891).length);
    var i_33556934 = 0;
    var j_33556935 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556934 < (s_33556891).length)) break Label2;
          var c_33556936 = s_33556891[i_33556934];
          if ((c_33556936 < 128)) {
          res_33556933[j_33556935] = String.fromCharCode(c_33556936);
          i_33556934 += 1;
          }
          else {
            var helper_33556948 = newSeq_33556909(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556949 = c_33556936.toString(16);
                  if ((((code_33556949) == null ? 0 : (code_33556949).length) == 1)) {
                  helper_33556948.push("%0");;
                  }
                  else {
                  helper_33556948.push("%");;
                  }
                  
                  helper_33556948.push(code_33556949);;
                  i_33556934 += 1;
                  if ((((s_33556891).length <= i_33556934) || (s_33556891[i_33556934] < 128))) {
                  break Label3;
                  }
                  
                  c_33556936 = s_33556891[i_33556934];
                }
            };
++excHandler;
            try {
            res_33556933[j_33556935] = decodeURIComponent(helper_33556948.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556933[j_33556935] = helper_33556948.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556935 += 1;
        }
    };
    if (res_33556933.length < j_33556935) { for (var i = res_33556933.length ; i < j_33556935 ; ++i) res_33556933.push(null); }
               else { res_33556933.length = j_33556935; };
    result_33556892 = res_33556933.join("");

  return result_33556892;

}

function raiseException(e_33556643, ename_33556644) {
    e_33556643.name = ename_33556644;
    if ((excHandler == 0)) {
    unhandledException(e_33556643);
    }
    
    e_33556643.trace = nimCopy(null, rawWriteStackTrace_33556594(), NTI33554449);
    throw e_33556643;

  
}

function addInt(a_33557037, b_33557038) {
        var result = a_33557037 + b_33557038;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557311, a_33557312, b_33557313) {
  var result_33557314 = 0;

  BeforeRet: {
    if (((a_33557312 <= i_33557311) && (i_33557311 <= b_33557313))) {
    result_33557314 = i_33557311;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557314;

}

function chckIndx(i_33557306, a_33557307, b_33557308) {
  var result_33557309 = 0;

  BeforeRet: {
    if (((a_33557307 <= i_33557306) && (i_33557306 <= b_33557308))) {
    result_33557309 = i_33557306;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557306, a_33557307, b_33557308);
    }
    
  };

  return result_33557309;

}

function makeNimstrLit(c_33556885) {
      var result = [];
  for (var i = 0; i < c_33556885.length; ++i) {
    result[i] = c_33556885.charCodeAt(i);
  }
  return result;
  

  
}

function subInt(a_33557041, b_33557042) {
        var result = a_33557041 - b_33557042;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_33557045, b_33557046) {
        var result = a_33557045 * b_33557046;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);
var ConstSet9 = setConstr([65, 90], [97, 122]);

function nimMax(a_33557095, b_33557096) {
    var Temporary1;

  var result_33557097 = 0;

  BeforeRet: {
    if ((b_33557096 <= a_33557095)) {
    Temporary1 = a_33557095;
    }
    else {
    Temporary1 = b_33557096;
    }
    
    result_33557097 = Temporary1;
    break BeforeRet;
  };

  return result_33557097;

}

function nimMin(a_33557091, b_33557092) {
    var Temporary1;

  var result_33557093 = 0;

  BeforeRet: {
    if ((a_33557091 <= b_33557092)) {
    Temporary1 = a_33557091;
    }
    else {
    Temporary1 = b_33557092;
    }
    
    result_33557093 = Temporary1;
    break BeforeRet;
  };

  return result_33557093;

}

function addChar(x_33557402, c_33557403) {
    x_33557402.push(c_33557403);

  
}
var F = {procname: "module dom", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module dom", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/js/dom.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fuzzysearch", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/fuzzysearch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fuzzysearch", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/fuzzysearch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_1040187567 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.filename = "jsffi.nim";
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module asyncjs", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/js/asyncjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module asyncjs", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/js/asyncjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsformdata", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/jsformdata.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsformdata", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/jsformdata.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsheaders", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/jsheaders.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsheaders", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/jsheaders.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module httpcore", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/httpcore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module httpcore", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/httpcore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsfetch", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/jsfetch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsfetch", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/jsfetch.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function setTheme(theme_520093702) {
  var F = {procname: "dochack.setTheme", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 7;
    F.filename = "dochack.nim";
    document.documentElement.setAttribute("data-theme", theme_520093702);
    F.line = 8;
    window.localStorage.setItem("theme", theme_520093702);
  framePtr = F.prev;

  
}

function add_33556366(x_33556367, x_33556367_Idx, y_33556368) {
          if (x_33556367[x_33556367_Idx] === null) { x_33556367[x_33556367_Idx] = []; }
      var off = x_33556367[x_33556367_Idx].length;
      x_33556367[x_33556367_Idx].length += y_33556368.length;
      for (var i = 0; i < y_33556368.length; ++i) {
        x_33556367[x_33556367_Idx][off+i] = y_33556368.charCodeAt(i);
      }
    

  
}

function isFatPointer_33557246(ti_33557247) {
  var result_33557248 = false;

  BeforeRet: {
    result_33557248 = !((ConstSet1[ti_33557247.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557248;

}

function nimCopyAux(dest_33557259, src_33557260, n_33557261) {
    switch (n_33557261.kind) {
    case 0:
      break;
    case 1:
            dest_33557259[n_33557261.offset] = nimCopy(dest_33557259[n_33557261.offset], src_33557260[n_33557261.offset], n_33557261.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557261.sons.length; i++) {
      nimCopyAux(dest_33557259, src_33557260, n_33557261.sons[i]);
    }
    
      break;
    case 3:
            dest_33557259[n_33557261.offset] = nimCopy(dest_33557259[n_33557261.offset], src_33557260[n_33557261.offset], n_33557261.typ);
      for (var i = 0; i < n_33557261.sons.length; ++i) {
        nimCopyAux(dest_33557259, src_33557260, n_33557261.sons[i][1]);
      }
    
      break;
    }

  
}

function auxWriteStackTrace_33556501(f_33556502) {
  var result_33556503 = [[]];

    var it_33556511 = f_33556502;
    var i_33556512 = 0;
    var total_33556513 = 0;
    var tempFrames_33556514 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555824);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556511 == null)) && (i_33556512 <= 63))) break Label2;
          tempFrames_33556514[i_33556512].Field0 = it_33556511.procname;
          tempFrames_33556514[i_33556512].Field1 = it_33556511.line;
          tempFrames_33556514[i_33556512].Field2 = it_33556511.filename;
          i_33556512 += 1;
          total_33556513 += 1;
          it_33556511 = it_33556511.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556511 == null))) break Label4;
          total_33556513 += 1;
          it_33556511 = it_33556511.prev;
        }
    };
    result_33556503[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556513 == i_33556512))) {
    result_33556503[0].push.apply(result_33556503[0], [40]);;
    result_33556503[0].push.apply(result_33556503[0], HEX24_369098760((total_33556513 - i_33556512)));;
    result_33556503[0].push.apply(result_33556503[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556544 = 0;
      var colontmp__520094895 = 0;
      colontmp__520094895 = (i_33556512 - 1);
      var res_520094897 = colontmp__520094895;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_520094897)) break Label7;
            j_33556544 = res_520094897;
            result_33556503[0].push.apply(result_33556503[0], cstrToNimstr(tempFrames_33556514[j_33556544].Field2));;
            if ((0 < tempFrames_33556514[j_33556544].Field1)) {
            result_33556503[0].push.apply(result_33556503[0], [40]);;
            addInt_301990126(result_33556503, 0, tempFrames_33556514[j_33556544].Field1);
            if (false) {
            result_33556503[0].push.apply(result_33556503[0], [44,32]);;
            addInt_301990126(result_33556503, 0, 0);
            }
            
            result_33556503[0].push.apply(result_33556503[0], [41]);;
            }
            
            result_33556503[0].push.apply(result_33556503[0], [32,97,116,32]);;
            add_33556366(result_33556503, 0, tempFrames_33556514[j_33556544].Field0);
            result_33556503[0].push.apply(result_33556503[0], [10]);;
            res_520094897 -= 1;
          }
      };
    };

  return result_33556503[0];

}

function rawWriteStackTrace_33556594() {
  var result_33556595 = [];

    if (!((framePtr == null))) {
    result_33556595 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556501(framePtr) || []), NTI33554449);
    }
    else {
      result_33556595 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556595;

}

function newSeq_33556909(len_33556911) {
  var result_33556912 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 636;
    F.filename = "system.nim";
    result_33556912 = new Array(len_33556911); for (var i = 0 ; i < len_33556911 ; ++i) { result_33556912[i] = null; }  framePtr = F.prev;

  return result_33556912;

}

function unhandledException(e_33556639) {
    var buf_33556640 = [[]];
    if (!(((e_33556639.message).length == 0))) {
    buf_33556640[0].push.apply(buf_33556640[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556640[0].push.apply(buf_33556640[0], e_33556639.message);;
    }
    else {
    buf_33556640[0].push.apply(buf_33556640[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556640[0].push.apply(buf_33556640[0], [32,91]);;
    add_33556366(buf_33556640, 0, e_33556639.name);
    buf_33556640[0].push.apply(buf_33556640[0], [93,10]);;
    buf_33556640[0].push.apply(buf_33556640[0], rawWriteStackTrace_33556594());;
    var cbuf_33556641 = toJSStr(buf_33556640[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556641);
  }
  else {
    throw cbuf_33556641;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557035) {
        if (a_33557035 > 2147483647 || a_33557035 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990087(result_301990089, result_301990089_Idx, x_301990090, start_301990091, n_301990092) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "digitsutils.nim";
    var old_301990093 = (result_301990089[result_301990089_Idx]).length;
    F.line = 45;
    if (result_301990089[result_301990089_Idx].length < (Temporary1 = chckRange(addInt(old_301990093, n_301990092), 0, 2147483647), Temporary1)) { for (var i = result_301990089[result_301990089_Idx].length; i < Temporary1; ++i) result_301990089[result_301990089_Idx].push(0); }
         else {result_301990089[result_301990089_Idx].length = Temporary1; };
    Label2: {
      F.line = 47;
      var iHEX60gensym4_301990107 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520094890 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_520094890 < n_301990092)) break Label4;
            F.line = 50;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990107 = i_520094890;
            F.line = 50;
            result_301990089[result_301990089_Idx][chckIndx(addInt(old_301990093, iHEX60gensym4_301990107), 0, (result_301990089[result_301990089_Idx]).length - 1)] = x_301990090.charCodeAt(chckIndx(addInt(start_301990091, iHEX60gensym4_301990107), 0, (x_301990090).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520094890 = addInt(i_520094890, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990083(result_301990085, result_301990085_Idx, x_301990086) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "digitsutils.nim";
    addChars_301990087(result_301990085, result_301990085_Idx, x_301990086, 0, ((x_301990086) == null ? 0 : (x_301990086).length));
  framePtr = F.prev;

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 112;
    F.filename = "digitsutils.nim";
    addChars_301990083(result_301990109, result_301990109_Idx, ((x_301990110) + ""));
  framePtr = F.prev;

  
}

function addInt_301990126(result_301990127, result_301990127_Idx, x_301990128) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "digitsutils.nim";
    addInt_301990108(result_301990127, result_301990127_Idx, BigInt(x_301990128));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990126(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function raiseIndexError(i_33556802, a_33556803, b_33556804) {
    var Temporary1;

    if ((b_33556804 < a_33556803)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556802) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556803) || [],[32,46,46,32] || [],HEX24_369098760(b_33556804) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function onDOMLoaded(e_520093737) {
            
function HEX3Aanonymous_520093760(event_520093761) {
              var F = {procname: "onDOMLoaded.:anonymous", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
              framePtr = F;
                F.line = 22;
                F.filename = "dochack.nim";
                event_520093761.target.parentNode.style.display = "none";
                F.line = 24;
                event_520093761.target.parentNode.nextSibling.style.display = "inline";
              framePtr = F.prev;

              
            }

  var F = {procname: "dochack.onDOMLoaded", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 17;
    F.filename = "dochack.nim";
    document.getElementById("theme-select").value = window.localStorage.getItem("theme");
    Label1: {
      F.line = 19;
      var pragmaDots_520093759 = null;
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520094881 = [];
      F.line = 19;
      F.filename = "dochack.nim";
      colontmp__520094881 = document.getElementsByClassName("pragmadots");
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520094883 = 0;
      F.line = 250;
      var L_520094884 = (colontmp__520094881).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520094883 < L_520094884)) break Label3;
            F.line = 19;
            F.filename = "dochack.nim";
            pragmaDots_520093759 = colontmp__520094881[chckIndx(i_520094883, 0, (colontmp__520094881).length - 1)];
            F.line = 19;
            pragmaDots_520093759.onclick = HEX3Aanonymous_520093760;
            F.line = 13;
            F.filename = "iterators.nim";
            i_520094883 += 1;
            if (!(((colontmp__520094881).length == L_520094884))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function isWhitespace_520094101(x_520094102) {
  var result_520094103 = false;

  var F = {procname: "dochack.isWhitespace", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 119;
    F.filename = "dochack.nim";
    result_520094103 = (((x_520094102.nodeName == "#text") && !/\S/.test(x_520094102.textContent)) || (x_520094102.nodeName == "#comment"));
  framePtr = F.prev;

  return result_520094103;

}

function toToc_520094104(x_520094105, father_520094106) {
                var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;
      var Temporary15;

  var F = {procname: "dochack.toToc", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    if ((x_520094105.nodeName == "UL")) {
    F.line = 123;
    F.filename = "dochack.nim";
    var f_520094114 = {heading: null, kids: [], sortId: (father_520094106.kids).length, doSort: false};
    F.line = 124;
    var i_520094115 = 0;
    Label1: {
      F.line = 125;
        Label2: while (true) {
        if (!(i_520094115 < x_520094105.childNodes.length)) break Label2;
          F.line = 126;
          var nxt_520094116 = addInt(i_520094115, 1);
          Label3: {
            F.line = 127;
              Label4: while (true) {
                if (!(nxt_520094116 < x_520094105.childNodes.length)) Temporary5 = false; else {                  Temporary5 = isWhitespace_520094101(x_520094105.childNodes[nxt_520094116]);                }              if (!Temporary5) break Label4;
                F.line = 128;
                nxt_520094116 = addInt(nxt_520094116, 1);
              }
          };
            if (!(nxt_520094116 < x_520094105.childNodes.length)) Temporary8 = false; else {              Temporary8 = (x_520094105.childNodes[i_520094115].nodeName == "LI");            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = (x_520094105.childNodes[i_520094115].childNodes.length == 1);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = (x_520094105.childNodes[nxt_520094116].nodeName == "UL");            }          if (Temporary6) {
          F.line = 131;
          var e_520094128 = {heading: x_520094105.childNodes[i_520094115].childNodes[0], kids: [], sortId: (f_520094114.kids).length, doSort: false};
          F.line = 132;
          var it_520094129 = x_520094105.childNodes[nxt_520094116];
          Label9: {
            F.line = 133;
            var j_520094134 = 0;
            F.line = 126;
            F.filename = "iterators_1.nim";
            var colontmp__520094904 = 0;
            F.line = 133;
            F.filename = "dochack.nim";
            colontmp__520094904 = it_520094129.childNodes.length;
            F.line = 128;
            F.filename = "iterators_1.nim";
            var i_520094905 = 0;
            Label10: {
              F.line = 129;
                Label11: while (true) {
                if (!(i_520094905 < colontmp__520094904)) break Label11;
                  F.line = 133;
                  F.filename = "dochack.nim";
                  j_520094134 = i_520094905;
                  F.line = 133;
                  toToc_520094104(it_520094129.childNodes[j_520094134], e_520094128);
                  F.line = 131;
                  F.filename = "iterators_1.nim";
                  i_520094905 = addInt(i_520094905, 1);
                }
            };
          };
          F.line = 135;
          F.filename = "dochack.nim";
          f_520094114.kids.push(e_520094128);;
          F.line = 136;
          i_520094115 = addInt(nxt_520094116, 1);
          }
          else {
            F.line = 138;
            toToc_520094104(x_520094105.childNodes[i_520094115], f_520094114);
            F.line = 139;
            i_520094115 = addInt(i_520094115, 1);
          }
          
        }
    };
    F.line = 140;
    father_520094106.kids.push(f_520094114);;
    }
    else {
    if (isWhitespace_520094101(x_520094105)) {
    }
    else {
    if ((x_520094105.nodeName == "LI")) {
    F.line = 144;
    var idx_520094151 = [];
    Label12: {
      F.line = 145;
      var i_520094156 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520094908 = 0;
      F.line = 145;
      F.filename = "dochack.nim";
      colontmp__520094908 = x_520094105.childNodes.length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520094909 = 0;
      Label13: {
        F.line = 129;
          Label14: while (true) {
          if (!(i_520094909 < colontmp__520094908)) break Label14;
            F.line = 145;
            F.filename = "dochack.nim";
            i_520094156 = i_520094909;
            if (!(isWhitespace_520094101(x_520094105.childNodes[i_520094156]))) {
            F.line = 146;
            idx_520094151.push(i_520094156);;
            }
            
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520094909 = addInt(i_520094909, 1);
          }
      };
    };
      if (!((idx_520094151).length == 2)) Temporary15 = false; else {        Temporary15 = (x_520094105.childNodes[idx_520094151[chckIndx(1, 0, (idx_520094151).length - 1)]].nodeName == "UL");      }    if (Temporary15) {
    F.line = 148;
    F.filename = "dochack.nim";
    var e_520094172 = {heading: x_520094105.childNodes[idx_520094151[chckIndx(0, 0, (idx_520094151).length - 1)]], kids: [], sortId: (father_520094106.kids).length, doSort: false};
    F.line = 149;
    var it_520094173 = x_520094105.childNodes[idx_520094151[chckIndx(1, 0, (idx_520094151).length - 1)]];
    Label16: {
      F.line = 150;
      var j_520094178 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520094912 = 0;
      F.line = 150;
      F.filename = "dochack.nim";
      colontmp__520094912 = it_520094173.childNodes.length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520094913 = 0;
      Label17: {
        F.line = 129;
          Label18: while (true) {
          if (!(i_520094913 < colontmp__520094912)) break Label18;
            F.line = 150;
            F.filename = "dochack.nim";
            j_520094178 = i_520094913;
            F.line = 150;
            toToc_520094104(it_520094173.childNodes[j_520094178], e_520094172);
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520094913 = addInt(i_520094913, 1);
          }
      };
    };
    F.line = 152;
    F.filename = "dochack.nim";
    father_520094106.kids.push(e_520094172);;
    }
    else {
      Label19: {
        F.line = 154;
        var i_520094187 = 0;
        F.line = 126;
        F.filename = "iterators_1.nim";
        var colontmp__520094916 = 0;
        F.line = 154;
        F.filename = "dochack.nim";
        colontmp__520094916 = x_520094105.childNodes.length;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520094917 = 0;
        Label20: {
          F.line = 129;
            Label21: while (true) {
            if (!(i_520094917 < colontmp__520094916)) break Label21;
              F.line = 154;
              F.filename = "dochack.nim";
              i_520094187 = i_520094917;
              F.line = 154;
              toToc_520094104(x_520094105.childNodes[i_520094187], father_520094106);
              F.line = 131;
              F.filename = "iterators_1.nim";
              i_520094917 = addInt(i_520094917, 1);
            }
        };
      };
    }
    
    }
    else {
      F.line = 157;
      F.filename = "dochack.nim";
    father_520094106.kids.push({heading: x_520094105, kids: [], sortId: (father_520094106.kids).length, doSort: false});;
    }
    }}
  framePtr = F.prev;

  
}

function extractItems_520093893(x_520093894, heading_520093895, items_520093896, items_520093896_Idx) {
  var F = {procname: "dochack.extractItems", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((x_520093894 == null)) {
    F.line = 76;
    F.filename = "dochack.nim";
    break BeforeRet;
    }
    
    if ((!((x_520093894.heading == null)) && (x_520093894.heading.textContent == heading_520093895))) {
    Label1: {
      F.line = 78;
      var i_520093913 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520094920 = 0;
      F.line = 78;
      F.filename = "dochack.nim";
      colontmp__520094920 = (x_520093894.kids).length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520094921 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520094921 < colontmp__520094920)) break Label3;
            F.line = 78;
            F.filename = "dochack.nim";
            i_520093913 = i_520094921;
            F.line = 78;
            items_520093896[items_520093896_Idx].push(x_520093894.kids[chckIndx(i_520093913, 0, (x_520093894.kids).length - 1)].heading);;
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520094921 = addInt(i_520094921, 1);
          }
      };
    };
    }
    else {
      Label4: {
        F.line = 81;
        F.filename = "dochack.nim";
        var k_520093938 = null;
        F.line = 249;
        F.filename = "iterators.nim";
        var i_520094925 = 0;
        F.line = 250;
        var L_520094926 = (x_520093894.kids).length;
        Label5: {
          F.line = 251;
            Label6: while (true) {
            if (!(i_520094925 < L_520094926)) break Label6;
              F.line = 81;
              F.filename = "dochack.nim";
              k_520093938 = x_520093894.kids[chckIndx(i_520094925, 0, (x_520093894.kids).length - 1)];
              F.line = 81;
              extractItems_520093893(k_520093938, heading_520093895, items_520093896, items_520093896_Idx);
              F.line = 13;
              F.filename = "iterators.nim";
              i_520094925 += 1;
              if (!(((x_520093894.kids).length == L_520094926))) {
              F.line = 254;
              failedAssertImpl_268435541(makeNimstrLit("/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    }
    
  };
  framePtr = F.prev;

  
}

function tree_520093825(tag_520093826, kids_520093827) {
  var result_520093828 = null;

  var F = {procname: "dochack.tree", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 28;
    F.filename = "dochack.nim";
    result_520093828 = document.createElement(tag_520093826);
    Label1: {
      F.line = 29;
      var k_520093841 = null;
      F.line = 18;
      F.filename = "iterators.nim";
      var i_520094938 = 0;
      Label2: {
        F.line = 19;
          Label3: while (true) {
          if (!(i_520094938 < (kids_520093827).length)) break Label3;
            F.line = 29;
            F.filename = "dochack.nim";
            k_520093841 = kids_520093827[chckIndx(i_520094938, 0, (kids_520093827).length - 1)];
            F.line = 29;
            result_520093828.appendChild(k_520093841);
            F.line = 13;
            F.filename = "iterators.nim";
            i_520094938 += 1;
          }
      };
    };
  framePtr = F.prev;

  return result_520093828;

}

function text_520093849(s_520093850) {
  var result_520093851 = null;

  var F = {procname: "dochack.text", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 42;
    F.filename = "dochack.nim";
    result_520093851 = document.createTextNode(s_520093850);
  framePtr = F.prev;

  return result_520093851;

}

function uncovered_520094291(x_520094292) {
    var Temporary1;

  var result_520094293 = null;

  var F = {procname: "dochack.uncovered", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((((x_520094292.kids).length == 0) && !((x_520094292.heading == null)))) {
    F.line = 171;
    F.filename = "dochack.nim";
    if (!(x_520094292.heading.hasOwnProperty('__karaxMarker__'))) {
    Temporary1 = x_520094292;
    }
    else {
    Temporary1 = null;
    }
    
    result_520094293 = Temporary1;
    break BeforeRet;
    }
    
    F.line = 172;
    result_520094293 = {heading: x_520094292.heading, kids: [], sortId: x_520094292.sortId, doSort: x_520094292.doSort};
    Label2: {
      F.line = 174;
      var k_520094308 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520094945 = 0;
      F.line = 250;
      var L_520094946 = (x_520094292.kids).length;
      Label3: {
        F.line = 251;
          Label4: while (true) {
          if (!(i_520094945 < L_520094946)) break Label4;
            F.line = 174;
            F.filename = "dochack.nim";
            k_520094308 = x_520094292.kids[chckIndx(i_520094945, 0, (x_520094292.kids).length - 1)];
            F.line = 175;
            var y_520094309 = uncovered_520094291(k_520094308);
            if (!((y_520094309 == null))) {
            F.line = 176;
            result_520094293.kids.push(y_520094309);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520094945 += 1;
            if (!(((x_520094292.kids).length == L_520094946))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((result_520094293.kids).length == 0)) {
    F.line = 177;
    F.filename = "dochack.nim";
    result_520094293 = null;
    }
    
  };
  framePtr = F.prev;

  return result_520094293;

}

function mergeTocs_520094321(orig_520094322, news_520094323) {
  var result_520094324 = null;

  var F = {procname: "dochack.mergeTocs", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 180;
    F.filename = "dochack.nim";
    result_520094324 = uncovered_520094291(orig_520094322);
    if ((result_520094324 == null)) {
    F.line = 182;
    result_520094324 = news_520094323;
    }
    else {
      Label1: {
        F.line = 184;
        var i_520094336 = 0;
        F.line = 126;
        F.filename = "iterators_1.nim";
        var colontmp__520094941 = 0;
        F.line = 184;
        F.filename = "dochack.nim";
        colontmp__520094941 = (news_520094323.kids).length;
        F.line = 128;
        F.filename = "iterators_1.nim";
        var i_520094942 = 0;
        Label2: {
          F.line = 129;
            Label3: while (true) {
            if (!(i_520094942 < colontmp__520094941)) break Label3;
              F.line = 184;
              F.filename = "dochack.nim";
              i_520094336 = i_520094942;
              F.line = 184;
              result_520094324.kids.push(news_520094323.kids[chckIndx(i_520094336, 0, (news_520094323.kids).length - 1)]);;
              F.line = 131;
              F.filename = "iterators_1.nim";
              i_520094942 = addInt(i_520094942, 1);
            }
        };
      };
    }
    
  framePtr = F.prev;

  return result_520094324;

}

function buildToc_520094341(orig_520094342, types_520094343, procs_520094344) {
  var result_520094345 = null;

  var F = {procname: "dochack.buildToc", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 188;
    F.filename = "dochack.nim";
    var newStuff_520094350 = {heading: null, kids: [], doSort: true, sortId: 0};
    Label1: {
      F.line = 189;
      var t_520094354 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520094933 = 0;
      F.line = 250;
      var L_520094934 = (types_520094343).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520094933 < L_520094934)) break Label3;
            F.line = 189;
            F.filename = "dochack.nim";
            t_520094354 = types_520094343[chckIndx(i_520094933, 0, (types_520094343).length - 1)];
            F.line = 190;
            var c_520094359 = {heading: t_520094354.cloneNode(true), kids: [], doSort: true, sortId: 0};
            F.line = 189;
            t_520094354.__karaxMarker__ = true;
            Label4: {
              F.line = 192;
              var p_520094363 = null;
              F.line = 249;
              F.filename = "iterators.nim";
              var i_520094930 = 0;
              F.line = 250;
              var L_520094931 = (procs_520094344).length;
              Label5: {
                F.line = 251;
                  Label6: while (true) {
                  if (!(i_520094930 < L_520094931)) break Label6;
                    F.line = 192;
                    F.filename = "dochack.nim";
                    p_520094363 = procs_520094344[chckIndx(i_520094930, 0, (procs_520094344).length - 1)];
                    if (!(p_520094363.hasOwnProperty('__karaxMarker__'))) {
                    F.line = 194;
                    var xx_520094364 = p_520094363.parentNode.getElementsByClassName("attachedType");
                    if ((((xx_520094364).length == 1) && (xx_520094364[chckIndx(0, 0, (xx_520094364).length - 1)].textContent == t_520094354.textContent))) {
                    F.line = 196;
                    var q_520094369 = tree_520093825("A", [text_520093849(p_520094363.title)]);
                    F.line = 197;
                    q_520094369.setAttribute("href", p_520094363.getAttribute("href"));
                    F.line = 198;
                    c_520094359.kids.push({heading: q_520094369, kids: [], sortId: 0, doSort: false});;
                    F.line = 199;
                    p_520094363.__karaxMarker__ = true;
                    }
                    
                    }
                    
                    F.line = 13;
                    F.filename = "iterators.nim";
                    i_520094930 += 1;
                    if (!(((procs_520094344).length == L_520094931))) {
                    F.line = 254;
                    failedAssertImpl_268435541(makeNimstrLit("/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            F.line = 189;
            F.filename = "dochack.nim";
            newStuff_520094350.kids.push(c_520094359);;
            F.line = 13;
            F.filename = "iterators.nim";
            i_520094933 += 1;
            if (!(((types_520094343).length == L_520094934))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 201;
    F.filename = "dochack.nim";
    result_520094345 = mergeTocs_520094321(orig_520094342, newStuff_520094350);
  framePtr = F.prev;

  return result_520094345;

}

function add_520093842(parent_520093843, kid_520093844) {
  var F = {procname: "dochack.add", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    if (((parent_520093843.nodeName == "TR") && ((kid_520093844.nodeName == "TD") || (kid_520093844.nodeName == "TH")))) {
    F.line = 34;
    F.filename = "dochack.nim";
    var k_520093845 = document.createElement("TD");
    F.line = 35;
    k_520093845.appendChild(kid_520093844);
    F.line = 36;
    parent_520093843.appendChild(k_520093845);
    }
    else {
      F.line = 38;
    parent_520093843.appendChild(kid_520093844);
    }
    
  framePtr = F.prev;

  
}

function setClass_520093846(e_520093847, value_520093848) {
  var F = {procname: "dochack.setClass", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "dochack.nim";
    e_520093847.setAttribute("class", value_520093848);
  framePtr = F.prev;

  
}

function toHtml_520093971(x_520093972, isRoot_520093973) {
    
function HEX3Aanonymous_520093991(a_520093992, b_520093993) {
      var result_520093994 = 0;

      var F = {procname: "toHtml.:anonymous", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
      framePtr = F;
      BeforeRet: {
        if ((!((a_520093992.heading == null)) && !((b_520093993.heading == null)))) {
        F.line = 100;
        F.filename = "dochack.nim";
        var x_520094003 = a_520093992.heading.textContent;
        F.line = 101;
        var y_520094004 = b_520093993.heading.textContent;
        if ((x_520094003 < y_520094004)) {
        F.line = 102;
        result_520093994 = (-1);
        break BeforeRet;
        }
        
        if ((y_520094004 < x_520094003)) {
        F.line = 103;
        result_520093994 = 1;
        break BeforeRet;
        }
        
        F.line = 104;
        result_520093994 = 0;
        break BeforeRet;
        }
        else {
          F.line = 107;
          result_520093994 = subInt(a_520093992.sortId, b_520093993.sortId);
          break BeforeRet;
        }
        
      };
      framePtr = F.prev;

      return result_520093994;

    }

  var result_520093974 = null;

  var F = {procname: "dochack.toHtml", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((x_520093972 == null)) {
    F.line = 85;
    F.filename = "dochack.nim";
    result_520093974 = null;
    break BeforeRet;
    }
    
    if (((x_520093972.kids).length == 0)) {
    if ((x_520093972.heading == null)) {
    F.line = 87;
    result_520093974 = null;
    break BeforeRet;
    }
    
    F.line = 88;
    result_520093974 = x_520093972.heading.cloneNode(true);
    break BeforeRet;
    }
    
    F.line = 89;
    result_520093974 = tree_520093825("DIV", []);
    if ((!((x_520093972.heading == null)) && !(x_520093972.heading.hasOwnProperty('__karaxMarker__')))) {
    F.line = 91;
    add_520093842(result_520093974, x_520093972.heading.cloneNode(true));
    }
    
    F.line = 92;
    var ul_520093990 = tree_520093825("UL", []);
    if (isRoot_520093973) {
    F.line = 94;
    setClass_520093846(ul_520093990, "simple simple-toc");
    }
    else {
      F.line = 96;
    setClass_520093846(ul_520093990, "simple");
    }
    
    if (x_520093972.doSort) {
    F.line = 98;
    x_520093972.kids.sort(HEX3Aanonymous_520093991);
    }
    
    Label1: {
      F.line = 109;
      var k_520094016 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520094949 = 0;
      F.line = 250;
      var L_520094950 = (x_520093972.kids).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520094949 < L_520094950)) break Label3;
            F.line = 109;
            F.filename = "dochack.nim";
            k_520094016 = x_520093972.kids[chckIndx(i_520094949, 0, (x_520093972.kids).length - 1)];
            F.line = 110;
            var y_520094017 = toHtml_520093971(k_520094016, false);
            if (!((y_520094017 == null))) {
            F.line = 112;
            add_520093842(ul_520093990, tree_520093825("LI", [y_520094017]));
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_520094949 += 1;
            if (!(((x_520093972.kids).length == L_520094950))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!((ul_520093990.childNodes.length == 0))) {
    F.line = 113;
    F.filename = "dochack.nim";
    add_520093842(result_520093974, ul_520093990);
    }
    
    if ((result_520093974.childNodes.length == 0)) {
    F.line = 114;
    result_520093974 = null;
    }
    
  };
  framePtr = F.prev;

  return result_520093974;

}

function replaceById_520093852(id_520093853, newTree_520093854) {
  var F = {procname: "dochack.replaceById", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 45;
    F.filename = "dochack.nim";
    var x_520093855 = document.getElementById(id_520093853);
    F.line = 46;
    x_520093855.parentNode.replaceChild(newTree_520093854, x_520093855);
    F.line = 47;
    newTree_520093854.id = id_520093853;
  framePtr = F.prev;

  
}

function togglevis_520094399(d_520094400) {
  var F = {procname: "dochack.togglevis", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    if ((d_520094400.style.display == "none")) {
    F.line = 207;
    F.filename = "dochack.nim";
    d_520094400.style.display = "inline";
    }
    else {
      F.line = 209;
      d_520094400.style.display = "none";
    }
    
  framePtr = F.prev;

  
}

function groupBy(value_520094402) {
  var F = {procname: "dochack.groupBy", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 212;
    F.filename = "dochack.nim";
    var toc_520094403 = document.getElementById("toc-list");
    if ((alternative_520094398[0] == null)) {
    F.line = 214;
    var tt_520094411 = {heading: null, kids: [], sortId: 0, doSort: false};
    F.line = 215;
    toToc_520094104(toc_520094403, tt_520094411);
    F.line = 216;
    tt_520094411 = tt_520094411.kids[chckIndx(0, 0, (tt_520094411.kids).length - 1)];
    F.line = 218;
    var types_520094416 = [[]];
    F.line = 219;
    var procs_520094421 = [[]];
    F.line = 221;
    extractItems_520093893(tt_520094411, "Types", types_520094416, 0);
    F.line = 222;
    extractItems_520093893(tt_520094411, "Procs", procs_520094421, 0);
    F.line = 223;
    extractItems_520093893(tt_520094411, "Converters", procs_520094421, 0);
    F.line = 224;
    extractItems_520093893(tt_520094411, "Methods", procs_520094421, 0);
    F.line = 225;
    extractItems_520093893(tt_520094411, "Templates", procs_520094421, 0);
    F.line = 226;
    extractItems_520093893(tt_520094411, "Macros", procs_520094421, 0);
    F.line = 227;
    extractItems_520093893(tt_520094411, "Iterators", procs_520094421, 0);
    F.line = 229;
    var ntoc_520094422 = buildToc_520094341(tt_520094411, types_520094416[0], procs_520094421[0]);
    F.line = 230;
    var x_520094423 = toHtml_520093971(ntoc_520094422, true);
    F.line = 231;
    alternative_520094398[0] = tree_520093825("DIV", [x_520094423]);
    }
    
    if ((value_520094402 == "type")) {
    F.line = 233;
    replaceById_520093852("tocRoot", alternative_520094398[0]);
    }
    else {
      F.line = 235;
    replaceById_520093852("tocRoot", tree_520093825("DIV", []));
    }
    
    F.line = 236;
    togglevis_520094399(document.getElementById("toc-list"));
  framePtr = F.prev;

  
}

function HEX5BHEX5D_687867115(s_687867118, x_687867119) {
  var result_687867120 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "indices.nim";
    var a_687867122 = x_687867119.a;
    F.line = 84;
    var L_687867124 = addInt(subInt(subInt((s_687867118).length, x_687867119.b), a_687867122), 1);
    F.line = 85;
    result_687867120 = nimCopy(null, mnewString(chckRange(L_687867124, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_687867129 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520094959 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520094959 < L_687867124)) break Label3;
            F.line = 86;
            F.filename = "indices.nim";
            i_687867129 = i_520094959;
            F.line = 86;
            result_687867120[chckIndx(i_687867129, 0, (result_687867120).length - 1)] = s_687867118[chckIndx(addInt(i_687867129, a_687867122), 0, (s_687867118).length - 1)];
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520094959 = addInt(i_520094959, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_687867120;

}

function HEX2EHEX2E_872415335(a_872415338, b_872415339) {
  var result_872415342 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 421;
    F.filename = "system.nim";
    result_872415342 = nimCopy(result_872415342, {a: a_872415338, b: b_872415339}, NTI872415315);
  framePtr = F.prev;

  return result_872415342;

}
async function loadIndex_520094619() {
  var result_520094621 = null;

  var F = {procname: "dochack.loadIndex", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 286;
    F.filename = "dochack.nim";
    var indexURL_520094627 = document.getElementById("indexLink").getAttribute("href");
    F.line = 288;
    var rootURL_520094652 = HEX5BHEX5D_687867115(cstrToNimstr(indexURL_520094627), HEX2EHEX2E_872415335(0, 14));
    F.line = 289;
    var resp_520094664 = (await (await fetch(indexURL_520094627)).text());
    F.line = 291;
    var indexElem_520094665 = document.createElement("div");
    F.line = 292;
    indexElem_520094665.innerHTML = resp_520094664;
    Label1: {
      F.line = 294;
      var href_520094686 = null;
      F.line = 247;
      F.filename = "iterators.nim";
      var colontmp__520094953 = [];
      F.line = 294;
      F.filename = "dochack.nim";
      colontmp__520094953 = indexElem_520094665.getElementsByClassName("reference");
      F.line = 249;
      F.filename = "iterators.nim";
      var i_520094955 = 0;
      F.line = 250;
      var L_520094956 = (colontmp__520094953).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_520094955 < L_520094956)) break Label3;
            F.line = 294;
            F.filename = "dochack.nim";
            href_520094686 = colontmp__520094953[chckIndx(i_520094955, 0, (colontmp__520094953).length - 1)];
            F.line = 294;
            href_520094686.setAttribute("href", toJSStr((rootURL_520094652 || []).concat(cstrToNimstr(href_520094686.getAttribute("href")) || [])));
            F.line = 297;
            db_520094440[0].push(href_520094686);;
            F.line = 298;
            contents_520094441[0].push(href_520094686.getAttribute("data-doc-search-tag"));;
            F.line = 13;
            F.filename = "iterators.nim";
            i_520094955 += 1;
            if (!(((colontmp__520094953).length == L_520094956))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 150;
    F.filename = "asyncjs.nim";
    result_520094621 = undefined;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094621;

}

function then_520094795(future_520094798, onSuccess_520094799, onReject_520094800) {
  var result_520094801 = null;

  var F = {procname: "then.then", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/js/asyncjs.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 245;
    F.filename = "asyncjs.nim";
    var ret_520094811 = null;
    F.line = 246;
    ret_520094811 = future_520094798.then(onSuccess_520094799, onReject_520094800)
    F.line = 247;
    result_520094801 = ret_520094811;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_520094801;

}

function nsuToLowerAsciiChar(c_687865941) {
  var result_687865942 = 0;

  var F = {procname: "strutils.toLowerAscii", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    if ((ConstSet2[c_687865941] != undefined)) {
    F.line = 218;
    F.filename = "strutils.nim";
    result_687865942 = (c_687865941 ^ 32);
    }
    else {
      F.line = 220;
      result_687865942 = c_687865941;
    }
    
  framePtr = F.prev;

  return result_687865942;

}

function fuzzyMatch_671088656(pattern_671088657, str_671088658) {
              var Temporary4;
              var Temporary5;
                var Temporary6;
      var Temporary7;
        var Temporary8;

  var result_671088661 = {Field0: 0, Field1: false};

  var F = {procname: "fuzzysearch.fuzzyMatch", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/fuzzysearch.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "fuzzysearch.nim";
    var scoreState_671088662 = (-100);
    F.line = 37;
    var headerMatched_671088663 = false;
    F.line = 38;
    var unmatchedLeadingCharCount_671088664 = 0;
    F.line = 39;
    var consecutiveMatchCount_671088665 = 0;
    F.line = 40;
    var strIndex_671088666 = 0;
    F.line = 41;
    var patIndex_671088667 = 0;
    F.line = 42;
    var score_671088668 = 0;
    Label1: {
      F.line = 48;
        Label2: while (true) {
        if (!((strIndex_671088666 < ((str_671088658) == null ? 0 : (str_671088658).length)) && (patIndex_671088667 < ((pattern_671088657) == null ? 0 : (pattern_671088657).length)))) break Label2;
          Label3: {
            F.line = 50;
            var patternChar_671088671 = nsuToLowerAsciiChar(pattern_671088657.charCodeAt(chckIndx(patIndex_671088667, 0, (pattern_671088657).length - 1)));
            F.line = 51;
            var strChar_671088672 = nsuToLowerAsciiChar(str_671088658.charCodeAt(chckIndx(strIndex_671088666, 0, (str_671088658).length - 1)));
            if ((ConstSet3[patternChar_671088671] != undefined)) {
            F.line = 55;
            patIndex_671088667 = addInt(patIndex_671088667, 1);
            F.line = 56;
            break Label3;
            }
            
            if ((ConstSet4[strChar_671088672] != undefined)) {
            F.line = 58;
            strIndex_671088666 = addInt(strIndex_671088666, 1);
            F.line = 59;
            break Label3;
            }
            
            if ((!(headerMatched_671088663) && (strChar_671088672 == 58))) {
            F.line = 64;
            headerMatched_671088663 = true;
            F.line = 65;
            scoreState_671088662 = (-100);
            F.line = 66;
            score_671088668 = ((Math.floor((0.5 * score_671088668))) | 0);
            F.line = 67;
            patIndex_671088667 = 0;
            F.line = 68;
            strIndex_671088666 = addInt(strIndex_671088666, 1);
            F.line = 69;
            break Label3;
            }
            
            if ((strChar_671088672 == patternChar_671088671)) {
            F.line = 72;
            switch (scoreState_671088662) {
            case (-100):
            case 20:
              F.line = 74;
              scoreState_671088662 = 10;
              break;
            case 0:
              F.line = 77;
              scoreState_671088662 = 5;
              F.line = 77;
              score_671088668 = addInt(score_671088668, scoreState_671088662);
              break;
            case 10:
            case 5:
              F.line = 80;
              consecutiveMatchCount_671088665 = addInt(consecutiveMatchCount_671088665, 1);
              F.line = 81;
              scoreState_671088662 = 5;
              F.line = 82;
              score_671088668 = addInt(score_671088668, mulInt(5, consecutiveMatchCount_671088665));
              if ((scoreState_671088662 == 10)) {
              F.line = 85;
              score_671088668 = addInt(score_671088668, 10);
              }
              
              F.line = 87;
              var onBoundary_671088724 = (patIndex_671088667 == ((pattern_671088657) == null ? -1 : (pattern_671088657).length - 1));
              if ((!(onBoundary_671088724) && (strIndex_671088666 < ((str_671088658) == null ? -1 : (str_671088658).length - 1)))) {
              F.line = 90;
              var nextPatternChar_671088725 = nsuToLowerAsciiChar(pattern_671088657.charCodeAt(chckIndx(addInt(patIndex_671088667, 1), 0, (pattern_671088657).length - 1)));
              F.line = 91;
              var nextStrChar_671088726 = nsuToLowerAsciiChar(str_671088658.charCodeAt(chckIndx(addInt(strIndex_671088666, 1), 0, (str_671088658).length - 1)));
              F.line = 94;
              if (!!((ConstSet5[nextStrChar_671088726] != undefined))) Temporary4 = false; else {                Temporary4 = !((nextStrChar_671088726 == nextPatternChar_671088725));              }              onBoundary_671088724 = Temporary4;
              }
              
              if (onBoundary_671088724) {
              F.line = 99;
              scoreState_671088662 = 20;
              F.line = 99;
              score_671088668 = addInt(score_671088668, scoreState_671088662);
              }
              
              break;
            case (-1):
            case (-3):
              F.line = 102;
              if (!((ConstSet6[str_671088658.charCodeAt(chckIndx(subInt(strIndex_671088666, 1), 0, (str_671088658).length - 1))] != undefined))) Temporary5 = true; else {                if (!(ConstSet7[str_671088658.charCodeAt(chckIndx(subInt(strIndex_671088666, 1), 0, (str_671088658).length - 1))] != undefined)) Temporary6 = false; else {                  Temporary6 = (ConstSet8[str_671088658.charCodeAt(chckIndx(strIndex_671088666, 0, (str_671088658).length - 1))] != undefined);                }                Temporary5 = Temporary6;              }              var isLeadingChar_671088750 = Temporary5;
              if (isLeadingChar_671088750) {
              F.line = 109;
              scoreState_671088662 = 10;
              }
              else {
                F.line = 113;
                scoreState_671088662 = 0;
                F.line = 113;
                score_671088668 = addInt(score_671088668, scoreState_671088662);
              }
              
              break;
            }
            F.line = 114;
            patIndex_671088667 = addInt(patIndex_671088667, 1);
            }
            else {
              F.line = 117;
              switch (scoreState_671088662) {
              case (-100):
                F.line = 119;
                scoreState_671088662 = (-3);
                F.line = 119;
                score_671088668 = addInt(score_671088668, scoreState_671088662);
                break;
              case 5:
                F.line = 122;
                scoreState_671088662 = (-1);
                F.line = 122;
                score_671088668 = addInt(score_671088668, scoreState_671088662);
                F.line = 123;
                consecutiveMatchCount_671088665 = 0;
                break;
              case (-3):
                if ((unmatchedLeadingCharCount_671088664 < 3)) {
                F.line = 127;
                scoreState_671088662 = (-3);
                F.line = 127;
                score_671088668 = addInt(score_671088668, scoreState_671088662);
                }
                
                F.line = 128;
                unmatchedLeadingCharCount_671088664 = addInt(unmatchedLeadingCharCount_671088664, 1);
                break;
              default: 
                F.line = 131;
                scoreState_671088662 = (-1);
                F.line = 131;
                score_671088668 = addInt(score_671088668, scoreState_671088662);
                break;
              }
            }
            
            F.line = 133;
            strIndex_671088666 = addInt(strIndex_671088666, 1);
          };
        }
    };
      if (!(patIndex_671088667 == ((pattern_671088657) == null ? 0 : (pattern_671088657).length))) Temporary7 = false; else {        if ((strIndex_671088666 == ((str_671088658) == null ? 0 : (str_671088658).length))) Temporary8 = true; else {          Temporary8 = !((ConstSet9[str_671088658.charCodeAt(chckIndx(strIndex_671088666, 0, (str_671088658).length - 1))] != undefined));        }        Temporary7 = Temporary8;      }    if (Temporary7) {
    F.line = 136;
    score_671088668 = addInt(score_671088668, 10);
    }
    
    F.line = 139;
    var colontmp__520094972 = nimMax(0, score_671088668);
    F.line = 140;
    var colontmp__520094973 = (0 < score_671088668);
    F.line = 138;
    result_671088661 = nimCopy(result_671088661, {Field0: colontmp__520094972, Field1: colontmp__520094973}, NTI671088654);
  framePtr = F.prev;

  return result_671088661;

}

function escapeCString_520094442(x_520094443, x_520094443_Idx) {
  var F = {procname: "dochack.escapeCString", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 246;
    F.filename = "dochack.nim";
    var s_520094444 = [];
    Label1: {
      F.line = 247;
      var c_520094445 = 0;
      F.line = 83;
      F.filename = "iterators.nim";
      var iHEX60gensym13_520094976 = 0;
      F.line = 84;
      var nHEX60gensym13_520094977 = ((x_520094443[x_520094443_Idx]) == null ? 0 : (x_520094443[x_520094443_Idx]).length);
      Label2: {
        F.line = 88;
          Label3: while (true) {
          if (!(iHEX60gensym13_520094976 < nHEX60gensym13_520094977)) break Label3;
            F.line = 247;
            F.filename = "dochack.nim";
            c_520094445 = x_520094443[x_520094443_Idx].charCodeAt(chckIndx(iHEX60gensym13_520094976, 0, (x_520094443[x_520094443_Idx]).length - 1));
            F.line = 247;
            switch (c_520094445) {
            case 60:
              F.line = 249;
              s_520094444.push.apply(s_520094444, [38,108,116,59]);;
              break;
            case 62:
              F.line = 250;
              s_520094444.push.apply(s_520094444, [38,103,116,59]);;
              break;
            default: 
              F.line = 251;
              addChar(s_520094444, c_520094445);;
              break;
            }
            F.line = 13;
            F.filename = "iterators.nim";
            iHEX60gensym13_520094976 += 1;
          }
      };
    };
    F.line = 252;
    F.filename = "dochack.nim";
    x_520094443[x_520094443_Idx] = toJSStr(s_520094444);
  framePtr = F.prev;

  
}

function dosearch_520094446(value_520094447) {
    
function HEX3Aanonymous_520094474(a_520094479, b_520094480) {
      var result_520094487 = 0;

      var F = {procname: "dosearch.:anonymous", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
      framePtr = F;
        F.line = 272;
        F.filename = "dochack.nim";
        result_520094487 = subInt(b_520094480["Field1"], a_520094479["Field1"]);
      framePtr = F.prev;

      return result_520094487;

    }

  var result_520094448 = null;

  var F = {procname: "dochack.dosearch", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((db_520094440[0]).length == 0)) {
    F.line = 256;
    F.filename = "dochack.nim";
    break BeforeRet;
    }
    
    F.line = 257;
    var ul_520094452 = tree_520093825("UL", []);
    F.line = 258;
    result_520094448 = tree_520093825("DIV", []);
    F.line = 259;
    setClass_520093846(result_520094448, "search_results");
    F.line = 260;
    var matches_520094457 = [];
    Label1: {
      F.line = 261;
      var i_520094465 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520094963 = 0;
      F.line = 261;
      F.filename = "dochack.nim";
      colontmp__520094963 = (db_520094440[0]).length;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520094964 = 0;
      Label2: {
        F.line = 129;
          Label3: while (true) {
          if (!(i_520094964 < colontmp__520094963)) break Label3;
            F.line = 261;
            F.filename = "dochack.nim";
            i_520094465 = i_520094964;
            Label4: {
              F.line = 262;
              var c_520094466 = contents_520094441[0][chckIndx(i_520094465, 0, (contents_520094441[0]).length - 1)];
              if (((c_520094466 == "Examples") || (c_520094466 == "PEG construction"))) {
              F.line = 267;
              break Label4;
              }
              
              F.line = 268;
              var tmpTuple_520094467 = fuzzyMatch_671088656(value_520094447, c_520094466);
              F.line = 268;
              var score_520094468 = tmpTuple_520094467["Field0"];
              F.line = 268;
              var matched_520094469 = tmpTuple_520094467["Field1"];
              if (matched_520094469) {
              F.line = 270;
              matches_520094457.push({Field0: db_520094440[0][chckIndx(i_520094465, 0, (db_520094440[0]).length - 1)], Field1: score_520094468});;
              }
              
            };
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520094964 = addInt(i_520094964, 1);
          }
      };
    };
    F.line = 272;
    F.filename = "dochack.nim";
    matches_520094457.sort(HEX3Aanonymous_520094474);
    Label5: {
      F.line = 273;
      var i_520094504 = 0;
      F.line = 126;
      F.filename = "iterators_1.nim";
      var colontmp__520094967 = 0;
      F.line = 273;
      F.filename = "dochack.nim";
      colontmp__520094967 = nimMin((matches_520094457).length, 29);
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_520094968 = 0;
      Label6: {
        F.line = 129;
          Label7: while (true) {
          if (!(i_520094968 < colontmp__520094967)) break Label7;
            F.line = 273;
            F.filename = "dochack.nim";
            i_520094504 = i_520094968;
            F.line = 274;
            matches_520094457[chckIndx(i_520094504, 0, (matches_520094457).length - 1)]["Field0"].innerHTML = matches_520094457[chckIndx(i_520094504, 0, (matches_520094457).length - 1)]["Field0"].getAttribute("data-doc-search-tag");
            F.line = 273;
            escapeCString_520094442(matches_520094457[chckIndx(i_520094504, 0, (matches_520094457).length - 1)]["Field0"], "innerHTML");
            F.line = 273;
            add_520093842(ul_520094452, tree_520093825("LI", [matches_520094457[chckIndx(i_520094504, 0, (matches_520094457).length - 1)]["Field0"]]));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_520094968 = addInt(i_520094968, 1);
          }
      };
    };
    if ((ul_520094452.childNodes.length == 0)) {
    F.line = 278;
    F.filename = "dochack.nim";
    add_520093842(result_520094448, tree_520093825("B", [text_520093849("no search results")]));
    }
    else {
      F.line = 280;
      add_520093842(result_520094448, tree_520093825("B", [text_520093849("search results")]));
      F.line = 281;
      add_520093842(result_520094448, ul_520094452);
    }
    
  };
  framePtr = F.prev;

  return result_520094448;

}

function search() {
    
function wrapper_520094780() {
      var F = {procname: "search.wrapper", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
      framePtr = F;
        F.line = 308;
        F.filename = "dochack.nim";
        var elem_520094781 = document.getElementById("searchInput");
        F.line = 309;
        var value_520094782 = elem_520094781.value;
        if (!((((value_520094782) == null ? 0 : (value_520094782).length) == 0))) {
        if ((oldtoc_520094775[0] == null)) {
        F.line = 312;
        oldtoc_520094775[0] = document.getElementById("tocRoot");
        }
        
        F.line = 313;
        var results_520094786 = dosearch_520094446(value_520094782);
        F.line = 314;
        replaceById_520093852("tocRoot", results_520094786);
        }
        else {
        if (!((oldtoc_520094775[0] == null))) {
        F.line = 316;
        replaceById_520093852("tocRoot", oldtoc_520094775[0]);
        }
        }
      framePtr = F.prev;

      
    }

  var F = {procname: "dochack.search", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    if ((loadIndexFut_520094778[0] == null)) {
    F.line = 320;
    F.filename = "dochack.nim";
    loadIndexFut_520094778[0] = loadIndex_520094619();
    F.line = 322;
    var _ = then_520094795(loadIndexFut_520094778[0], wrapper_520094780, null);
    }
    
    if (!((timer_520094776[0] == null))) {
    F.line = 323;
    clearTimeout(timer_520094776[0]);
    }
    
    F.line = 324;
    timer_520094776[0] = setTimeout(wrapper_520094780, 400);
  framePtr = F.prev;

  
}

function copyToClipboard() {
  var F = {procname: "dochack.copyToClipboard", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
  framePtr = F;
    F.line = 327;
    F.filename = "dochack.nim";
    
    function updatePreTags() {

      const allPreTags = document.querySelectorAll("pre")
    
      allPreTags.forEach((e) => {
      
          const div = document.createElement("div")
          div.classList.add("copyToClipBoard")
    
          const preTag = document.createElement("pre")
          preTag.innerHTML = e.innerHTML
    
          const button = document.createElement("button")
          button.value = e.textContent.replace('...', '') 
          button.classList.add("copyToClipBoardBtn")
          button.style.cursor = "pointer"
    
          div.appendChild(preTag)
          div.appendChild(button)
    
          e.outerHTML = div.outerHTML
      
      })
    }


    function copyTextToClipboard(e) {
        const clipBoardContent = e.target.value
        navigator.clipboard.writeText(clipBoardContent).then(function() {
            e.target.style.setProperty("--clipboard-image", "var(--clipboard-image-selected)")
        }, function(err) {
            console.error("Could not copy text: ", err);
        });
    }

    window.addEventListener("click", (e) => {
        if (e.target.classList.contains("copyToClipBoardBtn")) {
            copyTextToClipboard(e)
          }
    })

    window.addEventListener("mouseover", (e) => {
        if (e.target.nodeName === "PRE") {
            e.target.nextElementSibling.style.setProperty("--clipboard-image", "var(--clipboard-image-normal)")
        }
    })
    
    window.addEventListener("DOMContentLoaded", updatePreTags)

    
  framePtr = F.prev;

  
}
var Temporary1;
var F = {procname: "module dochack", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
framePtr = F;
F.line = 11;
F.filename = "dochack.nim";
F.line = 12;
var t_520093735 = window.localStorage.getItem("theme");
if ((t_520093735 == null)) {
Temporary1 = "auto";
}
else {
Temporary1 = t_520093735;
}

setTheme(Temporary1);
F.line = 203;
var alternative_520094398 = [null];
F.line = 239;
var db_520094440 = [[]];
F.line = 240;
var contents_520094441 = [[]];
F.line = 302;
var oldtoc_520094775 = [null];
F.line = 303;
var timer_520094776 = [null];
F.line = 304;
var loadIndexFut_520094778 = [null];
F.line = 381;
copyToClipboard();
F.line = 382;
window.addEventListener("DOMContentLoaded", onDOMLoaded, false);
framePtr = F.prev;
var F = {procname: "module dochack", prev: framePtr, filename: "/Volumes/MacData/Works/wxpayiot/nim-lang/Nim/tools/dochack/dochack.nim", line: 0};
framePtr = F;
framePtr = F.prev;
